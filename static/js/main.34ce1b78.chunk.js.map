{"version":3,"sources":["static/img/Alan Walker.jpg","static/img/Ariana Grande.jpg","static/img/Coldplay.jpg","static/img/Maroon 5.jpg","static/lrc/All Falls Down.txt","static/lrc/Alone.txt","static/lrc/Baby Don't Go.txt","static/lrc/Diamond Heart.txt","static/lrc/Different World.txt","static/lrc/Faded.txt","static/lrc/Girls Like You.txt","static/lrc/Harder To Breathe.txt","static/lrc/Memories.txt","static/lrc/Nobody's Love.txt","static/lrc/One More Night.txt","static/song/All Falls Down.mp3","static/song/Alone.mp3","static/song/Baby Don't Go.mp3","static/song/Diamond Heart.mp3","static/song/Different World.mp3","static/song/Faded.mp3","static/song/Girls Like You.mp3","static/song/Harder To Breathe.mp3","static/song/Memories.mp3","static/song/Nobody's Love.mp3","static/song/One More Night.mp3","static/img/animated-sound-bars.gif","globalStyle.js","source.js","context/audioContext.js","context/globalContext.js","components/AsideBar/AsideBar.js","components/Progress/Progess.js","components/DynamicSong/DynamicSong.js","components/ControlBar/ControlBar.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","ResetStyle","albumImg","AlanWalker","ArianaGrande","Coldplay","Maroon5","song","lrc","OneMoreNight","music","OneMoreNight_song","AllFallsDown","AllFallsDown_song","Alone","Alone_song","BabyDontGo","BabyDontGo_song","DiamondHeart","DiamondHeart_song","DifferentWorld","DifferentWorld_song","Faded","Faded_song","GirlsLikeYou","GirlsLikeYou_song","HarderToBreathe","HarderToBreathe_song","Memories","Memories_song","NobodysLove","NobodysLove_song","parseTimeRange","ranges","length","start","end","AudioContext","createContext","useAudio","useContext","AudioProvider","src","children","useState","buffered","time","duration","paused","waiting","playbackRate","endedCallback","volume","state","setOrgState","setState","partState","ref","useRef","firstTime","useEffect","current","controls","play","element","React","createElement","id","onPlay","onPause","onWaiting","onPlaying","onEnded","onDurationChange","el","onTimeUpdate","currentTime","onProgress","lockPlay","promise","resetLock","then","pause","seek","undefined","Math","min","max","setPlaybackRate","rate","setCurrentTime","setVolume","percent","toFixed","setEndedCallback","callback","Provider","value","ContextStore","Wrapper","styled","aside","Title","div","Ul","ul","Li","li","props","active","NowPlaying","attrs","imgUrl","img","playing","AsideBar","globalState","setGlobalState","albums","activeAlbum","nowPlaying","className","map","idx","onClick","key","album","Gif","alt","StylesProgress","StyledCircle","style","left","StyledColorBar","width","Progress","StyledDynamicSong","SingStr","p","DynamicSong","nowSinging","setNowSinging","loading","setLoading","songArr","setSongArr","a","fetch","r","text","split","str","substring","songStr","catch","err","getText","index","item","CommandBar","toTimeStr","num","minute","floor","second","StyledVolume","Volume","StyledBtn","button","size","Btn","icon","ControlBar","songs","randomMode","setRandomMode","repeatMode","setRepeatMode","e","clientX","currentTarget","getBoundingClientRect","offsetWidth","prev","activeSongs","nextIdx","name","random","Content","Background","PlayList","MusicDesc","List","StyledItem","isPlaying","Item","Main","handleClickPlay","StyledApp","main","initState","activeSong","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.34ce1b78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Alan Walker.6a52c879.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ariana Grande.cd4acaf0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Coldplay.7933fd1b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Maroon 5.f8e609d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/All Falls Down.7a4966f1.txt\";","module.exports = __webpack_public_path__ + \"static/media/Alone.9714ab53.txt\";","module.exports = __webpack_public_path__ + \"static/media/Baby Don't Go.5fada29c.txt\";","module.exports = __webpack_public_path__ + \"static/media/Diamond Heart.ecfb4684.txt\";","module.exports = __webpack_public_path__ + \"static/media/Different World.05af2500.txt\";","module.exports = __webpack_public_path__ + \"static/media/Faded.2479fe52.txt\";","module.exports = __webpack_public_path__ + \"static/media/Girls Like You.fea1820b.txt\";","module.exports = __webpack_public_path__ + \"static/media/Harder To Breathe.21c11aaa.txt\";","module.exports = __webpack_public_path__ + \"static/media/Memories.4b1fc57b.txt\";","module.exports = __webpack_public_path__ + \"static/media/Nobody's Love.ba4d9f5c.txt\";","module.exports = __webpack_public_path__ + \"static/media/One More Night.1760a5e6.txt\";","module.exports = __webpack_public_path__ + \"static/media/All Falls Down.8442a4a8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Alone.99cde056.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Baby Don't Go.15cfa35e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Diamond Heart.6c7a4684.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Different World.90c598ef.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Faded.66b16427.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Girls Like You.f0e79e01.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Harder To Breathe.a4480198.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Memories.ee3a393e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Nobody's Love.670938e6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/One More Night.5f58ed00.mp3\";","module.exports = __webpack_public_path__ + \"static/media/animated-sound-bars.95b7fea7.gif\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto&display=swap\");\r\nhtml {\r\n  box-sizing: border-box;\r\n  font-family: \"Roboto\";\r\n}\r\n`;\r\n\r\nexport const ResetStyle = createGlobalStyle`\r\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font-family: \"Roboto\";\r\n  vertical-align: baseline;\r\n  box-sizing: border-box;\r\n}\r\naddress, caption, cite, code, dfn, em, strong, th, var, b {\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\nabbr, acronym {\r\n  border: 0;\r\n}\r\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\r\n  display: block;\r\n}\r\n*,\r\n*::after,\r\n*::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: inherit;\r\n}\r\nhtml {\r\n  text-size-adjust: 100%;\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n    line-height: 1;\r\n}\r\nol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote {\r\n  &:before,   &:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n}\r\nq {\r\n  &:before,   &:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\ncaption, th {\r\n  text-align: left;\r\n}\r\ntextarea {\r\n  resize: none;\r\n}\r\na {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\nbutton {\r\n  padding: 0;\r\n  border: none;\r\n  background: none;\r\n}\r\n`;\r\n","import AlanWalker from \"./static/img/Alan Walker.jpg\";\r\nimport ArianaGrande from \"./static/img/Ariana Grande.jpg\";\r\nimport Coldplay from \"./static/img/Coldplay.jpg\";\r\nimport Maroon5 from \"./static/img/Maroon 5.jpg\";\r\n\r\nimport AllFallsDown from \"./static/lrc/All Falls Down.txt\";\r\nimport Alone from \"./static/lrc/Alone.txt\";\r\nimport BabyDontGo from \"./static/lrc/Baby Don't Go.txt\";\r\nimport DiamondHeart from \"./static/lrc/Diamond Heart.txt\";\r\nimport DifferentWorld from \"./static/lrc/Different World.txt\";\r\nimport Faded from \"./static/lrc/Faded.txt\";\r\nimport GirlsLikeYou from \"./static/lrc/Girls Like You.txt\";\r\nimport HarderToBreathe from \"./static/lrc/Harder To Breathe.txt\";\r\nimport Memories from \"./static/lrc/Memories.txt\";\r\nimport NobodysLove from \"./static/lrc/Nobody's Love.txt\";\r\nimport OneMoreNight from \"./static/lrc/One More Night.txt\";\r\n\r\nimport AllFallsDown_song from \"./static/song/All Falls Down.mp3\";\r\nimport Alone_song from \"./static/song/Alone.mp3\";\r\nimport BabyDontGo_song from \"./static/song/Baby Don't Go.mp3\";\r\nimport DiamondHeart_song from \"./static/song/Diamond Heart.mp3\";\r\nimport DifferentWorld_song from \"./static/song/Different World.mp3\";\r\nimport Faded_song from \"./static/song/Faded.mp3\";\r\nimport GirlsLikeYou_song from \"./static/song/Girls Like You.mp3\";\r\nimport HarderToBreathe_song from \"./static/song/Harder To Breathe.mp3\";\r\nimport Memories_song from \"./static/song/Memories.mp3\";\r\nimport NobodysLove_song from \"./static/song/Nobody's Love.mp3\";\r\nimport OneMoreNight_song from \"./static/song/One More Night.mp3\";\r\n\r\nconst albumImg = {\r\n   \"Alan Walker\": AlanWalker,\r\n   \"Ariana Grande\": ArianaGrande,\r\n   Coldplay: Coldplay,\r\n   \"Maroon 5\": Maroon5,\r\n};\r\n\r\nconst song = {\r\n   \"One More Night\": {\r\n      lrc: OneMoreNight,\r\n      music: OneMoreNight_song,\r\n   },\r\n   \"All Falls Down\": {\r\n      lrc: AllFallsDown,\r\n      music: AllFallsDown_song,\r\n   },\r\n   Alone: {\r\n      lrc: Alone,\r\n      music: Alone_song,\r\n   },\r\n   \"Baby Don't Go\": {\r\n      lrc: BabyDontGo,\r\n      music: BabyDontGo_song,\r\n   },\r\n   \"Diamond Heart\": {\r\n      lrc: DiamondHeart,\r\n      music: DiamondHeart_song,\r\n   },\r\n   \"Different World\": {\r\n      lrc: DifferentWorld,\r\n      music: DifferentWorld_song,\r\n   },\r\n   Faded: {\r\n      lrc: Faded,\r\n      music: Faded_song,\r\n   },\r\n   \"Girls Like You\": {\r\n      lrc: GirlsLikeYou,\r\n      music: GirlsLikeYou_song,\r\n   },\r\n   \"Harder To Breathe\": {\r\n      lrc: HarderToBreathe,\r\n      music: HarderToBreathe_song,\r\n   },\r\n   Memories: {\r\n      lrc: Memories,\r\n      music: Memories_song,\r\n   },\r\n   \"Nobody's Love\": {\r\n      lrc: NobodysLove,\r\n      music: NobodysLove_song,\r\n   },\r\n};\r\n\r\nexport { albumImg, song };\r\n","import React, { useEffect, useRef, useState, createContext, useContext } from \"react\";\r\nimport { song } from \"../source\";\r\n\r\nconst parseTimeRange = (ranges) =>\r\n   ranges.length < 1\r\n      ? {\r\n           start: 0,\r\n           end: 0,\r\n        }\r\n      : {\r\n           start: ranges.start(0),\r\n           end: ranges.end(0),\r\n        };\r\n\r\nconst AudioContext = createContext(null);\r\n\r\nconst AudioProvider = ({ src, children }) => {\r\n   const [state, setOrgState] = useState({\r\n      buffered: {\r\n         start: 0,\r\n         end: 0,\r\n      },\r\n      time: 0,\r\n      duration: 0,\r\n      paused: true,\r\n      waiting: false,\r\n      playbackRate: 1,\r\n      endedCallback: null,\r\n      src: \"\",\r\n      volume: 100,\r\n   });\r\n   const setState = (partState) => setOrgState({ ...state, ...partState });\r\n   const ref = useRef(null);\r\n   const firstTime = useRef(true);\r\n\r\n   useEffect(() => {\r\n      setState({ src });\r\n      if (!firstTime.current) {\r\n         controls.play();\r\n      }\r\n      firstTime.current = false;\r\n   }, [src]);\r\n\r\n   const element = React.createElement(\"audio\", {\r\n      src: song[src].music,\r\n      controls: false,\r\n      id: \"audio\",\r\n      ref,\r\n      onPlay: () => setState({ paused: false }),\r\n      onPause: () => setState({ paused: true }),\r\n      onWaiting: () => setState({ waiting: true }),\r\n      onPlaying: () => setState({ waiting: false }),\r\n      onEnded: state.endedCallback,\r\n      onDurationChange: () => {\r\n         const el = ref.current;\r\n         if (!el) {\r\n            return;\r\n         }\r\n         const { duration, buffered } = el;\r\n         setState({\r\n            duration,\r\n            buffered: parseTimeRange(buffered),\r\n         });\r\n      },\r\n      onTimeUpdate: () => {\r\n         const el = ref.current;\r\n         if (!el) {\r\n            return;\r\n         }\r\n\r\n         setState({ time: el.currentTime });\r\n      },\r\n      onProgress: () => {\r\n         const el = ref.current;\r\n         if (!el) {\r\n            return;\r\n         }\r\n         setState({ buffered: parseTimeRange(el.buffered) });\r\n      },\r\n   });\r\n\r\n   let lockPlay = false;\r\n\r\n   const controls = {\r\n      play: () => {\r\n         const el = ref.current;\r\n         if (!el) {\r\n            return undefined;\r\n         }\r\n         if (!lockPlay) {\r\n            const promise = el.play();\r\n            const isPromise = typeof promise === \"object\";\r\n\r\n            if (isPromise) {\r\n               lockPlay = true;\r\n               const resetLock = () => {\r\n                  lockPlay = false;\r\n               };\r\n               promise.then(resetLock, resetLock);\r\n            }\r\n\r\n            return promise;\r\n         }\r\n         return undefined;\r\n      },\r\n      pause: () => {\r\n         const el = ref.current;\r\n         if (el && !lockPlay) {\r\n            return el.pause();\r\n         }\r\n      },\r\n      seek: (time) => {\r\n         const el = ref.current;\r\n         if (!el || state.duration === undefined) {\r\n            return;\r\n         }\r\n         time = Math.min(state.duration, Math.max(0, time));\r\n         el.currentTime = time || 0;\r\n      },\r\n      // 設定播放速度\r\n      setPlaybackRate: (rate) => {\r\n         const el = ref.current;\r\n         if (!el || state.duration === undefined) {\r\n            return;\r\n         }\r\n\r\n         setState({\r\n            playbackRate: rate,\r\n         });\r\n         el.playbackRate = rate;\r\n      },\r\n      setCurrentTime: (time) => {\r\n         const el = ref.current;\r\n         if (!el) {\r\n            return;\r\n         }\r\n\r\n         el.currentTime = time;\r\n\r\n         setState({\r\n            time,\r\n         });\r\n      },\r\n      setVolume: (percent) => {\r\n         const el = ref.current;\r\n         if (!el) {\r\n            return;\r\n         }\r\n\r\n         el.volume = (percent / 100).toFixed(1);\r\n\r\n         setState({\r\n            volume: percent.toFixed(1),\r\n         });\r\n      },\r\n      setEndedCallback: (callback) => {\r\n         setState({ endedCallback: callback });\r\n      },\r\n   };\r\n\r\n   return (\r\n      <AudioContext.Provider\r\n         value={{\r\n            state,\r\n            controls,\r\n         }}\r\n      >\r\n         {children}\r\n         {element}\r\n      </AudioContext.Provider>\r\n   );\r\n};\r\n\r\nconst useAudio = () => useContext(AudioContext);\r\n\r\nexport { useAudio };\r\nexport default AudioProvider;\r\n","import { createContext } from \"react\";\r\n\r\nconst ContextStore = createContext({});\r\n\r\nexport default ContextStore;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { albumImg } from \"../../source\";\r\nimport Gif from \"../../static/img/animated-sound-bars.gif\";\r\nimport { useAudio } from \"../../context/audioContext\";\r\nimport ContextStore from \"../../context/globalContext\";\r\n\r\nconst Wrapper = styled.aside`\r\n   width: 220px;\r\n   background-color: var(--black3);\r\n   height: 100vh;\r\n   display: flex;\r\n   flex-direction: column;\r\n   position: relative;\r\n   z-index: 2;\r\n   box-shadow: 5px 0px 15px rgba(0, 0, 0, 0.4);\r\n`;\r\n\r\nconst Title = styled.div`\r\n   background-color: var(--black1);\r\n   padding: 20px 25px;\r\n   color: var(--white1);\r\n   font-size: var(--fzM);\r\n   display: flex;\r\n   align-items: center;\r\n   font-weight: bold;\r\n   i {\r\n      margin-right: 10px;\r\n   }\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n   flex-grow: 1;\r\n`;\r\n\r\nconst Li = styled.li`\r\n   cursor: pointer;\r\n   padding: 15px 25px;\r\n   color: var(--gray2);\r\n   font-size: var(--fzS);\r\n   color: ${(props) => (props.active ? \"var(--white1)\" : \"var(--gray1)\")};\r\n   background: ${(props) => (props.active ? `var(--liner)` : \"\")};\r\n   &:hover {\r\n      color: #e3b8ff;\r\n      text-shadow: 0 0px 15px #bf89e2;\r\n   }\r\n`;\r\n\r\nconst NowPlaying = styled.div.attrs((props) => ({\r\n   imgUrl: albumImg[props.img],\r\n}))`\r\n   height: 210px;\r\n   background-image: url(\"${(props) => props.imgUrl}\");\r\n   background-size: cover;\r\n   background-position: center;\r\n   display: flex;\r\n   flex-direction: column;\r\n   position: relative;\r\n   .title {\r\n      padding: 16px 25px 8px;\r\n      color: var(--white1);\r\n      font-size: var(--fzM);\r\n      background-color: rgba(0, 0, 0, 0.8);\r\n      img {\r\n         display: ${(props) => (props.playing ? \"unset\" : \"none\")};\r\n         width: 15px;\r\n         margin-right: 10px;\r\n      }\r\n   }\r\n\r\n   .album {\r\n      padding: 0 25px;\r\n      color: var(--orange1);\r\n      font-size: var(--fzM);\r\n      flex-grow: 1;\r\n      text-shadow: 0 0px 7px #f5705d;\r\n      background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));\r\n   }\r\n   .song {\r\n      padding: 16px 25px;\r\n      color: var(--purple2);\r\n      font-size: var(--fzL);\r\n      text-shadow: 0 0px 7px #811dc5;\r\n      background-image: linear-gradient(to top, rgba(0, 0, 0, 0.8) 60%, rgba(0, 0, 0, 0));\r\n   }\r\n`;\r\n\r\nconst AsideBar = () => {\r\n   const { globalState, setGlobalState } = useContext(ContextStore);\r\n   const { albums, activeAlbum, nowPlaying } = globalState;\r\n   const { state } = useAudio();\r\n\r\n   return (\r\n      <Wrapper>\r\n         <Title>\r\n            <i className=\"material-icons\">library_music</i>\r\n            <span>My Albums</span>\r\n         </Title>\r\n         <Ul>\r\n            {albums.map((li, idx) => (\r\n               <Li\r\n                  onClick={() => setGlobalState({ activeAlbum: idx })}\r\n                  active={idx === activeAlbum}\r\n                  key={idx}\r\n               >\r\n                  {li}\r\n               </Li>\r\n            ))}\r\n         </Ul>\r\n         <NowPlaying img={nowPlaying.album} playing={!state.paused}>\r\n            <div className=\"title\">\r\n               Now Playing <img src={Gif} alt=\"animated\"></img>\r\n            </div>\r\n            <div className=\"album\">{nowPlaying.album}</div>\r\n            <div className=\"song\">{nowPlaying.song}</div>\r\n         </NowPlaying>\r\n      </Wrapper>\r\n   );\r\n};\r\n\r\nexport default AsideBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StylesProgress = styled.div`\r\n   background-color: rgba(54, 54, 54, 0.8);\r\n   position: relative;\r\n   cursor: pointer;\r\n`;\r\n\r\nconst StyledCircle = styled.div.attrs((props) => ({\r\n   style: {\r\n      left: props.percent > 98 ? \"98%\" : props.percent + \"%\",\r\n   },\r\n}))`\r\n   width: 10px;\r\n   height: 10px;\r\n   border-radius: 50%;\r\n   background-color: var(--white1);\r\n   position: absolute;\r\n   top: -3px;\r\n`;\r\n\r\nconst StyledColorBar = styled.div.attrs((props) => ({\r\n   style: {\r\n      width: props.percent + \"%\",\r\n   },\r\n}))`\r\n   height: 5px;\r\n   background-image: linear-gradient(to right, var(--purple1), var(--orange1));\r\n`;\r\n\r\nconst Progress = ({ currentTime, duration, onClick }) => {\r\n   const percent = ((currentTime * 100) / duration).toFixed(2);\r\n   return (\r\n      <StylesProgress onClick={onClick}>\r\n         <StyledColorBar percent={percent} />\r\n         <StyledCircle percent={percent} />\r\n      </StylesProgress>\r\n   );\r\n};\r\n\r\nexport default Progress;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAudio } from \"../../context/audioContext\";\r\nimport { song } from \"../../source\";\r\n\r\nconst StyledDynamicSong = styled.div`\r\n   transition: 0.5s;\r\n   height: 98px;\r\n   overflow: hidden;\r\n   background-color: rgba(0, 0, 0, 0.6);\r\n   > div {\r\n      transform: ${(props) => `translateY(-${props.active * 24}px)`};\r\n   }\r\n`;\r\n\r\nconst SingStr = styled.p`\r\n   transition: 0.5s;\r\n   line-height: 1.5;\r\n   color: ${(props) => (props.active ? \"var(--white1)\" : \"var(--gray1)\")};\r\n   text-align: center;\r\n   font-size: ${(props) => (props.active ? \"30px\" : \"16px\")};\r\n`;\r\n\r\nconst DynamicSong = () => {\r\n   const { state } = useAudio();\r\n   const [nowSinging, setNowSinging] = useState(0);\r\n   const [loading, setLoading] = useState(false);\r\n   const [songArr, setSongArr] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (!state.src) return;\r\n      const getText = async () => {\r\n         setLoading(true);\r\n         fetch(song[state.src].lrc)\r\n            .then((r) => r.text())\r\n            .then((text) => {\r\n               const songArr = text.split(\"\\n\").map((str) => {\r\n                  const minute = +str.substring(1, 3);\r\n                  const second = +str.substring(4, 6);\r\n                  return {\r\n                     time: minute * 60 + second,\r\n                     songStr: str.substring(10),\r\n                  };\r\n               });\r\n               setSongArr(songArr);\r\n               setLoading(false);\r\n            })\r\n            .catch((err) => {});\r\n      };\r\n      getText();\r\n   }, [state.src]);\r\n\r\n   useEffect(() => {\r\n      if (loading) {\r\n         return;\r\n      }\r\n\r\n      let index = 0;\r\n\r\n      while (songArr[index + 1] && state.time > songArr[index + 1].time) {\r\n         index++;\r\n      }\r\n\r\n      setNowSinging(index);\r\n   }, [state.time, loading]);\r\n\r\n   return (\r\n      <StyledDynamicSong active={nowSinging}>\r\n         {loading ? (\r\n            <div>loading</div>\r\n         ) : (\r\n            <div>\r\n               {songArr.map((item, idx) => (\r\n                  <SingStr active={idx === nowSinging} key={idx}>\r\n                     {item.songStr}\r\n                  </SingStr>\r\n               ))}\r\n            </div>\r\n         )}\r\n      </StyledDynamicSong>\r\n   );\r\n};\r\n\r\nexport default DynamicSong;\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ContextStore from \"../../context/globalContext\";\r\nimport { useAudio } from \"../../context/audioContext\";\r\nimport Progress from \"../Progress/Progess\";\r\nimport DynamicSong from \"../DynamicSong/DynamicSong\";\r\n\r\nconst Wrapper = styled.div`\r\n   background-color: var(--black2);\r\n`;\r\n\r\nconst CommandBar = styled.div`\r\n   background-color: var(--black2);\r\n   display: flex;\r\n   justify-content: space-between;\r\n   color: var(--white1);\r\n   align-items: center;\r\n   padding: 10px 30px;\r\n   .command {\r\n      width: 300px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n   }\r\n`;\r\n\r\nconst toTimeStr = (num) => {\r\n   const minute = Math.floor(num / 60);\r\n   const second = Math.floor(num % 60);\r\n   return `${minute < 10 ? \"0\" : \"\"}${minute}:${second < 10 ? \"0\" : \"\"}${second}`;\r\n};\r\n\r\nconst ControlBar = () => {\r\n   const { state, controls } = useAudio();\r\n   const { globalState, setGlobalState } = useContext(ContextStore);\r\n   const { albums, activeAlbum, songs, nowPlaying } = globalState;\r\n   const [randomMode, setRandomMode] = useState(false);\r\n   const [repeatMode, setRepeatMode] = useState(true);\r\n\r\n   const handleProgressClick = (e) => {\r\n      const clickX = e.clientX;\r\n      const eleX = e.currentTarget.getBoundingClientRect().left;\r\n      const eleWidth = e.currentTarget.offsetWidth;\r\n      const percent = ((clickX - eleX) * 100) / eleWidth;\r\n      controls.setCurrentTime(Math.floor((state.duration / 100) * percent));\r\n   };\r\n\r\n   const handleVolumeClick = (e) => {\r\n      const clickX = e.clientX;\r\n      const eleX = e.currentTarget.getBoundingClientRect().left;\r\n      const eleWidth = e.currentTarget.offsetWidth;\r\n      const percent = ((clickX - eleX) * 100) / eleWidth;\r\n      controls.setVolume(percent);\r\n   };\r\n\r\n   const handleNextClick = () => {\r\n      const activeSongs = songs[albums[activeAlbum]];\r\n      let nextIdx = 0;\r\n      if (randomMode) {\r\n         nextIdx = Math.floor(Math.random() * activeSongs.length);\r\n      } else {\r\n         nextIdx = nowPlaying.idx + 1 >= activeSongs.length ? 0 : nowPlaying.idx + 1;\r\n      }\r\n      setGlobalState({\r\n         nowPlaying: {\r\n            ...nowPlaying,\r\n            song: activeSongs[nextIdx].name,\r\n            idx: nextIdx,\r\n         },\r\n      });\r\n   };\r\n\r\n   const handleBackClick = () => {\r\n      if (state.time > 5 || nowPlaying.idx === 0) {\r\n         controls.setCurrentTime(0);\r\n      } else {\r\n         const activeSongs = songs[albums[activeAlbum]];\r\n         let nextIdx = nowPlaying.idx - 1;\r\n         setGlobalState({\r\n            nowPlaying: {\r\n               ...nowPlaying,\r\n               song: activeSongs[nextIdx].name,\r\n               idx: nextIdx,\r\n            },\r\n         });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <Wrapper>\r\n         <DynamicSong />\r\n         <Progress\r\n            currentTime={state.time}\r\n            duration={state.duration}\r\n            onClick={handleProgressClick}\r\n         />\r\n         <CommandBar>\r\n            <div>\r\n               {toTimeStr(state.time)} / {toTimeStr(state.duration)}\r\n            </div>\r\n            <div className=\"command\">\r\n               <Btn\r\n                  icon=\"shuffle\"\r\n                  active={randomMode}\r\n                  onClick={() => setRandomMode((prev) => !prev)}\r\n               />\r\n               <Btn icon=\"skip_previous\" onClick={handleBackClick} />\r\n               <Btn\r\n                  icon={state.paused ? \"play_circle_outline\" : \"pause_circle_outline\"}\r\n                  size=\"M\"\r\n                  onClick={() => (state.paused ? controls.play() : controls.pause())}\r\n               />\r\n               <Btn icon=\"skip_next\" onClick={handleNextClick} />\r\n               <Btn\r\n                  icon=\"repeat\"\r\n                  active={repeatMode}\r\n                  onClick={() => setRepeatMode((prev) => !prev)}\r\n               />\r\n            </div>\r\n            <Volume percent={state.volume} onClick={handleVolumeClick} />\r\n         </CommandBar>\r\n      </Wrapper>\r\n   );\r\n};\r\n\r\nconst StyledVolume = styled.div`\r\n   background-color: #282828;\r\n   height: 5px;\r\n   border-radius: 4.5px;\r\n   position: relative;\r\n   cursor: pointer;\r\n   display: flex;\r\n   flex-direction: row;\r\n   align-items: center;\r\n   i {\r\n      display: block;\r\n   }\r\n\r\n   .barWrapper {\r\n      width: 100px;\r\n      border-radius: 4.5px;\r\n      margin-left: 10px;\r\n      position: relative;\r\n      .colorBar {\r\n         width: ${(props) => props.percent}%;\r\n         height: 5px;\r\n         border-radius: 4.5px;\r\n         background-image: linear-gradient(to right, var(--purple1), var(--orange1));\r\n      }\r\n\r\n      .circle {\r\n         width: 10px;\r\n         height: 10px;\r\n         border-radius: 50%;\r\n         background-color: var(--white1);\r\n         position: absolute;\r\n         top: -2px;\r\n         left: ${(props) => props.percent - 10}%;\r\n      }\r\n   }\r\n`;\r\n\r\nconst Volume = ({ percent, onClick }) => {\r\n   return (\r\n      <StyledVolume percent={percent}>\r\n         <i className=\"material-icons\">volume_up</i>\r\n         <div className=\"barWrapper\" onClick={onClick}>\r\n            <div className=\"colorBar\"></div>\r\n            <div className=\"circle\"></div>\r\n         </div>\r\n      </StyledVolume>\r\n   );\r\n};\r\n\r\nconst StyledBtn = styled.button`\r\n   color: ${(props) => (props.active ? \"var(--purple1)\" : \"var(--white1)\")};\r\n   position: relative;\r\n   cursor: pointer;\r\n   i {\r\n      font-size: ${(props) => (props.size === \"M\" ? \"42px\" : \"26px\")};\r\n   }\r\n\r\n   &:hover {\r\n      color: var(--purple1);\r\n      transition: transform 0.1s;\r\n      transform: scale(1.1);\r\n   }\r\n\r\n   &::before {\r\n      content: \"\";\r\n      display: ${(props) => (props.active ? \"block\" : \"none\")};\r\n      position: absolute;\r\n      right: 0;\r\n      left: 0;\r\n      bottom: -5px;\r\n      margin: auto;\r\n      width: 5px;\r\n      height: 5px;\r\n      background-color: var(--purple1);\r\n      border-radius: 50%;\r\n   }\r\n`;\r\n\r\nconst Btn = ({ active, onClick, icon, size = \"S\" }) => {\r\n   return (\r\n      <StyledBtn onClick={onClick} active={active} size={size}>\r\n         <i className=\"material-icons\">{icon}</i>\r\n      </StyledBtn>\r\n   );\r\n};\r\n\r\nexport default ControlBar;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useAudio } from \"../../context/audioContext\";\r\nimport ContextStore from \"../../context/globalContext\";\r\nimport { albumImg } from \"../../source\";\r\n\r\nimport ControlBar from \"../ControlBar/ControlBar\";\r\n\r\nconst Wrapper = styled.div`\r\n   background-color: var(--black2);\r\n   height: 100vh;\r\n   display: flex;\r\n   flex-direction: column;\r\n   flex-grow: 1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n   background-color: var(--black2);\r\n   flex-grow: 1;\r\n   overflow: auto;\r\n   &::-webkit-scrollbar {\r\n      width: 12px;\r\n      background-color: var(--gray2);\r\n   }\r\n\r\n   &::-webkit-scrollbar-thumb {\r\n      box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n      background-color: #555;\r\n   }\r\n`;\r\n\r\nconst Background = styled.div.attrs((props) => ({\r\n   imgUrl: albumImg[props.img],\r\n}))`\r\n   background-color: green;\r\n   height: 40%;\r\n   background-image: url(\"${(props) => props.imgUrl}\");\r\n   background-size: cover;\r\n   background-position: center;\r\n   position: relative;\r\n\r\n   &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(22, 22, 22, 0.8);\r\n      z-index: 1;\r\n   }\r\n`;\r\n\r\nconst PlayList = styled.div`\r\n   padding: 0 55px 55px;\r\n   position: relative;\r\n   z-index: 2;\r\n`;\r\n\r\nconst MusicDesc = styled.div`\r\n   margin: -100px 0 50px;\r\n   display: flex;\r\n   .left {\r\n      width: 185px;\r\n      height: 185px;\r\n      background-color: red;\r\n      box-shadow: 3px 6px 10px rgba(0, 0, 0, 0.6);\r\n      img {\r\n         width: 185px;\r\n         height: 185px;\r\n      }\r\n   }\r\n\r\n   .mid {\r\n      padding-left: 25px;\r\n      color: var(--white1);\r\n      flex-grow: 1;\r\n      font-weight: bold;\r\n      .album {\r\n         font-size: 40px;\r\n         margin-bottom: 30px;\r\n      }\r\n      .singer {\r\n         color: var(--gray1);\r\n      }\r\n   }\r\n`;\r\n\r\nconst List = styled.ul``;\r\n\r\nconst StyledItem = styled.li`\r\n   color: var(--white1);\r\n   padding: 15px 25px;\r\n   display: flex;\r\n   font-size: 18px;\r\n   align-items: center;\r\n   background-color: ${(props) =>\r\n      props.idx % 2 === 1 ? \"var(--black2)\" : \"var(--black3)\"};\r\n   > div {\r\n      margin-right: 10px;\r\n   }\r\n   .play {\r\n      padding: 0 10px;\r\n   }\r\n   i {\r\n      opacity: ${(props) => (props.isPlaying ? 1 : 0)};\r\n      cursor: pointer;\r\n      font-size: 24px;\r\n   }\r\n   .name {\r\n      flex-grow: 1;\r\n      text-align: center;\r\n   }\r\n   &:hover {\r\n      background: var(--liner);\r\n      i {\r\n         opacity: 1;\r\n      }\r\n   }\r\n`;\r\n\r\nconst Item = ({ name, time, isPlaying, onClick, idx }) => {\r\n   return (\r\n      <StyledItem idx={idx} isPlaying={isPlaying}>\r\n         <div>{idx + 1}</div>\r\n         <div className=\"play\" onClick={() => onClick(idx)}>\r\n            <i className=\"material-icons\">\r\n               {isPlaying ? \"pause_circle_outline\" : \"play_circle_outline\"}\r\n            </i>\r\n         </div>\r\n         <div className=\"name\">{name}</div>\r\n         <div>{time}</div>\r\n      </StyledItem>\r\n   );\r\n};\r\n\r\nconst Main = () => {\r\n   const { globalState, setGlobalState } = useContext(ContextStore);\r\n   const { albums, activeAlbum, songs, nowPlaying } = globalState;\r\n\r\n   const { state, controls } = useAudio();\r\n\r\n   const activeSongs = songs[albums[activeAlbum]];\r\n   const album = albums[activeAlbum];\r\n\r\n   const handleClickPlay = (idx) => {\r\n      if (nowPlaying.song === activeSongs[idx].name) {\r\n         state.paused ? controls.play() : controls.pause();\r\n      } else {\r\n         setGlobalState({ nowPlaying: { album, song: activeSongs[idx].name, idx } });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <Wrapper>\r\n         <Content>\r\n            <Background img={album} />\r\n            <PlayList>\r\n               <MusicDesc>\r\n                  <div className=\"left\">\r\n                     <img src={albumImg[album]} alt=\"album\"></img>\r\n                  </div>\r\n                  <div className=\"mid\">\r\n                     <div className=\"album\">{album}</div>\r\n                     <div className=\"singer\">Red Pill Blues</div>\r\n                  </div>\r\n               </MusicDesc>\r\n               <List>\r\n                  {activeSongs.map((song, idx) => (\r\n                     <Item\r\n                        name={song.name}\r\n                        time={song.time}\r\n                        idx={idx}\r\n                        key={idx}\r\n                        onClick={handleClickPlay}\r\n                        isPlaying={song.name === nowPlaying.song && !state.paused}\r\n                     />\r\n                  ))}\r\n               </List>\r\n            </PlayList>\r\n         </Content>\r\n         <ControlBar />\r\n      </Wrapper>\r\n   );\r\n};\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\nimport { ResetStyle, GlobalStyle } from \"./globalStyle\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport AsideBar from \"./components/AsideBar/AsideBar\";\r\nimport Main from \"./components/Main/Main\";\r\n\r\nimport ContextStore from \"./context/globalContext\";\r\nimport AudioProvider from \"./context/audioContext\";\r\n\r\nconst StyledApp = styled.main`\r\n   font-size: 20px;\r\n   display: flex;\r\n`;\r\n\r\nconst initState = {\r\n   albums: [\"Maroon 5\", \"Alan Walker\", \"Coldplay\", \"Ariana Grande\"],\r\n   songs: {\r\n      \"Maroon 5\": [\r\n         { name: \"One More Night\", time: \"03:42\" },\r\n         { name: \"Girls Like You\", time: \"03:53\" },\r\n         { name: \"Harder To Breathe\", time: \"02:55\" },\r\n         { name: \"Memories\", time: \"03:09\" },\r\n         { name: \"Nobody's Love\", time: \"03:30\" },\r\n      ],\r\n      \"Alan Walker\": [\r\n         { name: \"Faded\", time: \"03:32\" },\r\n         { name: \"Different World\", time: \"03:42\" },\r\n         { name: \"All Falls Down\", time: \"03:40\" },\r\n         { name: \"Baby Don't Go\", time: \"03:30\" },\r\n         { name: \"Diamond Heart\", time: \"03:38\" },\r\n      ],\r\n      Coldplay: [\r\n         { name: \"One More Night\", time: \"03:42\" },\r\n         { name: \"Girls Like You\", time: \"03:53\" },\r\n         { name: \"Harder To Breathe\", time: \"02:55\" },\r\n         { name: \"Memories\", time: \"03:09\" },\r\n         { name: \"Nobody's Love\", time: \"03:30\" },\r\n      ],\r\n      \"Ariana Grande\": [\r\n         { name: \"Faded\", time: \"03:32\" },\r\n         { name: \"Different World\", time: \"03:42\" },\r\n         { name: \"All Falls Down\", time: \"03:40\" },\r\n         { name: \"Baby Don't Go\", time: \"03:30\" },\r\n         { name: \"Diamond Heart\", time: \"03:38\" },\r\n      ],\r\n   },\r\n   activeAlbum: 0,\r\n   activeSong: 0,\r\n   nowPlaying: {\r\n      album: \"Maroon 5\",\r\n      song: \"One More Night\",\r\n      idx: 0,\r\n   },\r\n};\r\n\r\nfunction App() {\r\n   const [state, setState] = useState(initState);\r\n   const setGlobalState = (partState) => setState({ ...state, ...partState });\r\n   const { nowPlaying } = state;\r\n\r\n   return (\r\n      <ContextStore.Provider\r\n         value={{\r\n            globalState: state,\r\n            setGlobalState,\r\n         }}\r\n      >\r\n         <AudioProvider src={nowPlaying.song}>\r\n            <StyledApp>\r\n               <ResetStyle />\r\n               <GlobalStyle />\r\n               <AsideBar />\r\n               <Main />\r\n            </StyledApp>\r\n         </AudioProvider>\r\n      </ContextStore.Provider>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}